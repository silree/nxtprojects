#labels Phase-Implementation
#sidebar NaviList
NXTUtils Contains a set of advanced toolkit to make your development with LeJOS easier. 
----
= Introduction =
NXTUtils provides advanced Image, Display, Sound methods. 
Most of the methods in XxxxUtil classes are static methods and you can invoke them by class name directly. 

You can find javadoc API document of NXTUtils here: http://dl.dropbox.com/u/3644101/NXT_Docs/NXTUtils/javadoc/index.html

= General Utilities =
There are some general utilities in NXTUtils package. These utilities are organized into classes according to their function. 
== DisplayUtil ==
This class contains some screen display related functions. 
 * drawXxxxCenter() methods allow you to draw images, strings on the screen horizontal center, and you determine the vertical position. 
 * drawXxxxRight() methods allow you to draw images, strings on the right of the screen. You can also specify the right margin if you don't want it to be drawn too right. 
 * xxxxCross() methods allow you to draw images or rectangles cross the screen. These are the most interesting methods, you can refer to [http://dl.dropbox.com/u/3644101/NXT_Docs/NXTUtils/javadoc/org/programus/nxj/util/DisplayUtil.html#drawRectCross(int,%20int,%20int,%20int,%20int) javadoc] for details. 
 
== ImageUtil ==
This class intends to contain some image processing related methods. For now, there is only one method. 

 * readImage() method read an image from a file. The image file can be generated by [NXTImageConverter LeJOS NXT Image Converter]. For details, refer to [http://dl.dropbox.com/u/3644101/NXT_Docs/NXTUtils/javadoc/org/programus/nxj/util/ImageUtil.html#readImage(java.io.File) javadoc] please. 

== SoundUtil ==
This class contains some sound playing related methods. But most of the methods in this class can be replace by *music support* classes. So please refer to music support chapter. 

== TimeUtil ==
This class intends to contain some time related methods. For now, there is only one method. 

 * getHMSms() method returns hour, minute, second, ms information from a single long time data. [http://dl.dropbox.com/u/3644101/NXT_Docs/NXTUtils/javadoc/org/programus/nxj/util/TimeUtil.html#getHMSms(long) javadoc here]

== Condition ==
This is an interface to represent a condition. It is very simple. To know where to use it, please refer to NXTRockBoy core package source code. 

= System Patch =
Since LeJOS does not implements a whole Java SE API, which make you can not use some useful features in Java SE not supported in LeJOS. So I implemented some by myself. 
Also, there are few bugs in LeJOS. I design another class to avoid the bugs. 

== Comparator ==
It is just the same as [http://java.sun.com/javase/6/docs/api/java/util/Comparator.html java.util.Comparator]. 

=== StringComparator ===
This is an implementation of Comparator to compare Strings. 

== MathUtil ==
There is a bug about Math.round() method in LeJOS. When you pass a -0.6 to the original LeJOS method, it returns 0. 
So I rewrite the round() method and put it into this class. 

= Music Support =
When I developing the games, I realize that a game without music is boring. So I developed a set of classes to support music. 
I made an big effort to make the javadoc clear, so please refer to javadoc to know how to use this set of classes. [http://dl.dropbox.com/u/3644101/NXT_Docs/NXTUtils/javadoc/org/programus/nxj/util/music/package-summary.html javadoc here]

= Small Font Text Support =
NXT LCD use 5x8 characters for display. It is too huge for me. So I made 3x5 character set. 

http://nxtprojects.googlecode.com/svn/wiki/NXTUtils.attach/3x5chars.gif

(All standard displayable ascii characters supported. )

You can get an image of any string, integer in this small font by invoking the methods of TextImage class. Then you can draw it anywhere you like. 
Here is an example to show how to use these classes. 
{{{
 TextImage ti = new TextImage3x5(); 
 Image message = ti.getImage("MESSAGE"); 
 Image number = ti.getImage(359); 
 DisplayUtil.drawImageCenter(message, (LCD.SCREEN_HEIGHT >> 1), LCD.ROP_XOR); 
 DisplayUtil.drawImageCenter(number, (LCD.SCREEN_HEIGHT >> 1) + message.getHeight() + 1, LCD.ROP_XOR); 
}}}

You can also find details in [http://dl.dropbox.com/u/3644101/NXT_Docs/NXTUtils/javadoc/org/programus/nxj/util/txtimg/package-summary.html javadoc]. 
